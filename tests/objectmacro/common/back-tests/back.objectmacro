# This file is part of SableCC ( http://sablecc.org ).
#
# See the NOTICE file distributed with this work for copyright information.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ========== Separator test ==============

Macro comma_separator
    Param
        x : empty_macro, separator=", ";
{Begin}
La liste x : {x}
Corps de semicolon : {Insert: semicolon_separator(x)}.
{End}

Macro empty_macro
{Begin}
empty
{End}

Macro semicolon_separator
    Internal
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        x : empty_macro;
=======
        x : empty_macro, separator="; ";
>>>>>>> Add back end tests
=======
        x : empty_macro;
>>>>>>> Remove arguments in macro references in internal declaration
=======
        x : empty_macro, separator="; ";
>>>>>>> Changement Objectmacro-back
{Begin}
Le corps de C : {x}
{End}

# ========== Example for back end tests ==========

Macro a
    Param
        x : String;
        y : b(z), separator="\n";
        z : c("first argument of c in a", x);
{Begin}
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
============= A ===============
Y : {y}
=======
=======
============= A ===============
<<<<<<< HEAD
>>>>>>> Remove arguments in macro references in internal declaration
{y}
>>>>>>> Add back end tests
=======
Y : {y}
>>>>>>> Add structure which contains list of macros and the context associated
=======
{y}
>>>>>>> Changement Objectmacro-back
{End}

Macro b
    Param
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        o : String;
        s : c(o, o);
<<<<<<< HEAD
    Internal
        p : c;
{Begin}
============== B ===============
P : {p}
S : {s}
=======
        x : String;
=======
        o : String;
>>>>>>> Update tests to be adapted to the lazy initialization
=======
>>>>>>> Remove arguments in macro references in internal declaration
=======
        x : String;
>>>>>>> Changement Objectmacro-back
    Internal
        y : c("first argument of c in b", x), separator="\n";
{Begin}
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
{y}
>>>>>>> Add back end tests
=======
{p}
>>>>>>> Update tests to be adapted to the lazy initialization
=======
============== B ===============
<<<<<<< HEAD
{p}
{s}
>>>>>>> Remove arguments in macro references in internal declaration
=======
P : {p}
S : {s}
>>>>>>> Add structure which contains list of macros and the context associated
=======
{y}
>>>>>>> Changement Objectmacro-back
{End}

Macro c
    Internal
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        q : String;
        r : String;
{Begin}
=============== C ==============
Q : {q}
R : {r}
<<<<<<< HEAD
=======
        y : String;
        z : String;
{Begin}
{y} {z}
>>>>>>> Add back end tests
=======
        q : String;
        r : String;
{Begin}
<<<<<<< HEAD
{q} {r}
>>>>>>> Update tests to be adapted to the lazy initialization
=======
=============== C ==============
{q}
{r}
>>>>>>> Remove arguments in macro references in internal declaration
=======
>>>>>>> Add structure which contains list of macros and the context associated
=======
        y : String;
        z : String;
{Begin}
{y} {z}
>>>>>>> Changement Objectmacro-back
{End}

Macro d
{Begin}
{Insert: e(
    "y1 {Insert: c("y2 {Insert: c("y3", "yz3")}", "{Insert: c("a", "b")}")}",
    "{Insert: c("y4", "z4")}",
    "{Insert: c("y4", "z4")}")
}
{End}

Macro e
    Internal
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        s : String;
        t : String;
        u : String;
{Begin}
{s}
{t}
{u}
{End}

# ========= Example for cyclic reference ==============

Macro f
    Param
        x : g(y);
        y : h;
<<<<<<< HEAD
{Begin}
{y} {x}
{End}

Macro g
    Internal
        z : h;
{Begin}
{z}
{End}

Macro h
    Param
        lala : f;
{Begin}
{lala}
{End}

#=========== Example =========

Macro i
    Param
        y : k("lala");
        z : k("On est dans i"), j(y);
{Begin}
=======
        x : String;
        y : String;
        z : String;
{Begin}
{x}
>>>>>>> Add back end tests
{y}
{z}
{End}

<<<<<<< HEAD
Macro j
    Internal
        y : k;
{Begin}
{y}
{End}

Macro k
    Internal
        a : String;
{Begin}
{a}
{End}


=======
#{Insert: c("y2 ", "")}
>>>>>>> Add back end tests
=======
        s : String;
        t : String;
        u : String;
{Begin}
{s}
{t}
{u}
{End}
<<<<<<< HEAD
>>>>>>> Update tests to be adapted to the lazy initialization
=======

# ========= Example for cyclic reference ==============

Macro f
    Param
        x : g(y);
        y : h("a");
=======
>>>>>>> Add comments and updated notice
{Begin}
{y} {x}
{End}

Macro g
    Internal
        z : h;
{Begin}
{z}
{End}

Macro h
    Param
        lala : f;
{Begin}
{lala}
{End}
<<<<<<< HEAD
>>>>>>> Add test for dynamic cyclic reference verification
=======

#=========== Example =========

Macro i
    Param
        y : k("lala");
        z : k("On est dans i"), j(y);
=======
        x : String;
        y : String;
        z : String;
>>>>>>> Changement Objectmacro-back
{Begin}
{x}
{y}
{z}
{End}

<<<<<<< HEAD
Macro j
    Internal
        y : k;
{Begin}
{y}
{End}

Macro k
    Internal
        a : String;
{Begin}
{a}
{End}


>>>>>>> Remove arguments in macro references in internal declaration
=======
#{Insert: c("y2 ", "")}
>>>>>>> Changement Objectmacro-back

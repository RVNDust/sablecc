/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.codegeneration.c.macro;
import java.util.*;

public class InternalsInitializer {

    private final String _paramName;

    InternalsInitializer(String paramName){
        this._paramName = paramName;
    }

void setHeader(MHeader mHeader){
  throw ObjectMacroException.incorrectType("MHeader", this._paramName);
}
void setInclude(MInclude mInclude){
  throw ObjectMacroException.incorrectType("MInclude", this._paramName);
}
void setLineSeparator(MLineSeparator mLineSeparator){
  throw ObjectMacroException.incorrectType("MLineSeparator", this._paramName);
}
void setContextH(MContextH mContextH){
  throw ObjectMacroException.incorrectType("MContextH", this._paramName);
}
void setContextC(MContextC mContextC){
  throw ObjectMacroException.incorrectType("MContextC", this._paramName);
}
void setInternalsInitializerH(MInternalsInitializerH mInternalsInitializerH){
  throw ObjectMacroException.incorrectType("MInternalsInitializerH", this._paramName);
}
void setRedefInternalsInitializerH(MRedefInternalsInitializerH mRedefInternalsInitializerH){
  throw ObjectMacroException.incorrectType("MRedefInternalsInitializerH", this._paramName);
}
void setInternalsInitializerC(MInternalsInitializerC mInternalsInitializerC){
  throw ObjectMacroException.incorrectType("MInternalsInitializerC", this._paramName);
}
void setRedefInternalsInitializerC(MRedefInternalsInitializerC mRedefInternalsInitializerC){
  throw ObjectMacroException.incorrectType("MRedefInternalsInitializerC", this._paramName);
}
void setParentInternalsSetterVtH(MParentInternalsSetterVtH mParentInternalsSetterVtH){
  throw ObjectMacroException.incorrectType("MParentInternalsSetterVtH", this._paramName);
}
void setParentInternalsSetterH(MParentInternalsSetterH mParentInternalsSetterH){
  throw ObjectMacroException.incorrectType("MParentInternalsSetterH", this._paramName);
}
void setParentInternalsSetterC(MParentInternalsSetterC mParentInternalsSetterC){
  throw ObjectMacroException.incorrectType("MParentInternalsSetterC", this._paramName);
}
void setRedefParentInternalsSetterC(MRedefParentInternalsSetterC mRedefParentInternalsSetterC){
  throw ObjectMacroException.incorrectType("MRedefParentInternalsSetterC", this._paramName);
}
void setLinkedListNodeH(MLinkedListNodeH mLinkedListNodeH){
  throw ObjectMacroException.incorrectType("MLinkedListNodeH", this._paramName);
}
void setLinkedListNodeC(MLinkedListNodeC mLinkedListNodeC){
  throw ObjectMacroException.incorrectType("MLinkedListNodeC", this._paramName);
}
void setLinkedListH(MLinkedListH mLinkedListH){
  throw ObjectMacroException.incorrectType("MLinkedListH", this._paramName);
}
void setLinkedListC(MLinkedListC mLinkedListC){
  throw ObjectMacroException.incorrectType("MLinkedListC", this._paramName);
}
void setStringBuilderH(MStringBuilderH mStringBuilderH){
  throw ObjectMacroException.incorrectType("MStringBuilderH", this._paramName);
}
void setStringBuilderC(MStringBuilderC mStringBuilderC){
  throw ObjectMacroException.incorrectType("MStringBuilderC", this._paramName);
}
void setMapH(MMapH mMapH){
  throw ObjectMacroException.incorrectType("MMapH", this._paramName);
}
void setMapC(MMapC mMapC){
  throw ObjectMacroException.incorrectType("MMapC", this._paramName);
}
void setStrSplitFunctionH(MStrSplitFunctionH mStrSplitFunctionH){
  throw ObjectMacroException.incorrectType("MStrSplitFunctionH", this._paramName);
}
void setStrSplitFunctionC(MStrSplitFunctionC mStrSplitFunctionC){
  throw ObjectMacroException.incorrectType("MStrSplitFunctionC", this._paramName);
}
void setClassInternalValueH(MClassInternalValueH mClassInternalValueH){
  throw ObjectMacroException.incorrectType("MClassInternalValueH", this._paramName);
}
void setClassInternalValueC(MClassInternalValueC mClassInternalValueC){
  throw ObjectMacroException.incorrectType("MClassInternalValueC", this._paramName);
}
void setSuperMacroH(MSuperMacroH mSuperMacroH){
  throw ObjectMacroException.incorrectType("MSuperMacroH", this._paramName);
}
void setSuperMacroC(MSuperMacroC mSuperMacroC){
  throw ObjectMacroException.incorrectType("MSuperMacroC", this._paramName);
}
void setMacroH(MMacroH mMacroH){
  throw ObjectMacroException.incorrectType("MMacroH", this._paramName);
}
void setMacroC(MMacroC mMacroC){
  throw ObjectMacroException.incorrectType("MMacroC", this._paramName);
}
void setMacroBuilder(MMacroBuilder mMacroBuilder){
  throw ObjectMacroException.incorrectType("MMacroBuilder", this._paramName);
}
void setEmptyBuilderWithContext(MEmptyBuilderWithContext mEmptyBuilderWithContext){
  throw ObjectMacroException.incorrectType("MEmptyBuilderWithContext", this._paramName);
}
void setInitDirectiveCall(MInitDirectiveCall mInitDirectiveCall){
  throw ObjectMacroException.incorrectType("MInitDirectiveCall", this._paramName);
}
void setInitInternalsCall(MInitInternalsCall mInitInternalsCall){
  throw ObjectMacroException.incorrectType("MInitInternalsCall", this._paramName);
}
void setRedefinedApplyInitializer(MRedefinedApplyInitializer mRedefinedApplyInitializer){
  throw ObjectMacroException.incorrectType("MRedefinedApplyInitializer", this._paramName);
}
void setConstructorH(MConstructorH mConstructorH){
  throw ObjectMacroException.incorrectType("MConstructorH", this._paramName);
}
void setConstructorC(MConstructorC mConstructorC){
  throw ObjectMacroException.incorrectType("MConstructorC", this._paramName);
}
void setParamRefBuilderH(MParamRefBuilderH mParamRefBuilderH){
  throw ObjectMacroException.incorrectType("MParamRefBuilderH", this._paramName);
}
void setParamStringRefBuilder(MParamStringRefBuilder mParamStringRefBuilder){
  throw ObjectMacroException.incorrectType("MParamStringRefBuilder", this._paramName);
}
void setParamMacroRefBuilder(MParamMacroRefBuilder mParamMacroRefBuilder){
  throw ObjectMacroException.incorrectType("MParamMacroRefBuilder", this._paramName);
}
void setInternalRefBuilderH(MInternalRefBuilderH mInternalRefBuilderH){
  throw ObjectMacroException.incorrectType("MInternalRefBuilderH", this._paramName);
}
void setInternalStringRefBuilder(MInternalStringRefBuilder mInternalStringRefBuilder){
  throw ObjectMacroException.incorrectType("MInternalStringRefBuilder", this._paramName);
}
void setInternalMacroRefBuilder(MInternalMacroRefBuilder mInternalMacroRefBuilder){
  throw ObjectMacroException.incorrectType("MInternalMacroRefBuilder", this._paramName);
}
void setInternalMacroSetterH(MInternalMacroSetterH mInternalMacroSetterH){
  throw ObjectMacroException.incorrectType("MInternalMacroSetterH", this._paramName);
}
void setInternalMacroSetterVtH(MInternalMacroSetterVtH mInternalMacroSetterVtH){
  throw ObjectMacroException.incorrectType("MInternalMacroSetterVtH", this._paramName);
}
void setInternalMacroSetter(MInternalMacroSetter mInternalMacroSetter){
  throw ObjectMacroException.incorrectType("MInternalMacroSetter", this._paramName);
}
void setParamStringGetter(MParamStringGetter mParamStringGetter){
  throw ObjectMacroException.incorrectType("MParamStringGetter", this._paramName);
}
void setInternalStringSetterH(MInternalStringSetterH mInternalStringSetterH){
  throw ObjectMacroException.incorrectType("MInternalStringSetterH", this._paramName);
}
void setInternalStringSetterVtH(MInternalStringSetterVtH mInternalStringSetterVtH){
  throw ObjectMacroException.incorrectType("MInternalStringSetterVtH", this._paramName);
}
void setInternalStringSetter(MInternalStringSetter mInternalStringSetter){
  throw ObjectMacroException.incorrectType("MInternalStringSetter", this._paramName);
}
void setInternalStringGetterH(MInternalStringGetterH mInternalStringGetterH){
  throw ObjectMacroException.incorrectType("MInternalStringGetterH", this._paramName);
}
void setInternalStringGetterVtH(MInternalStringGetterVtH mInternalStringGetterVtH){
  throw ObjectMacroException.incorrectType("MInternalStringGetterVtH", this._paramName);
}
void setInternalStringGetter(MInternalStringGetter mInternalStringGetter){
  throw ObjectMacroException.incorrectType("MInternalStringGetter", this._paramName);
}
void setInitDirectivesH(MInitDirectivesH mInitDirectivesH){
  throw ObjectMacroException.incorrectType("MInitDirectivesH", this._paramName);
}
void setInitDirectivesC(MInitDirectivesC mInitDirectivesC){
  throw ObjectMacroException.incorrectType("MInitDirectivesC", this._paramName);
}
void setNewDirective(MNewDirective mNewDirective){
  throw ObjectMacroException.incorrectType("MNewDirective", this._paramName);
}
void setFieldStringDeclaration(MFieldStringDeclaration mFieldStringDeclaration){
  throw ObjectMacroException.incorrectType("MFieldStringDeclaration", this._paramName);
}
void setFieldStringInitializer(MFieldStringInitializer mFieldStringInitializer){
  throw ObjectMacroException.incorrectType("MFieldStringInitializer", this._paramName);
}
void setFieldMacroDeclaration(MFieldMacroDeclaration mFieldMacroDeclaration){
  throw ObjectMacroException.incorrectType("MFieldMacroDeclaration", this._paramName);
}
void setFieldMacroInitializer(MFieldMacroInitializer mFieldMacroInitializer){
  throw ObjectMacroException.incorrectType("MFieldMacroInitializer", this._paramName);
}
void setInternalFieldDeclaration(MInternalFieldDeclaration mInternalFieldDeclaration){
  throw ObjectMacroException.incorrectType("MInternalFieldDeclaration", this._paramName);
}
void setInternalFieldInitializer(MInternalFieldInitializer mInternalFieldInitializer){
  throw ObjectMacroException.incorrectType("MInternalFieldInitializer", this._paramName);
}
void setInternalFieldDeinitializer(MInternalFieldDeinitializer mInternalFieldDeinitializer){
  throw ObjectMacroException.incorrectType("MInternalFieldDeinitializer", this._paramName);
}
void setContextField(MContextField mContextField){
  throw ObjectMacroException.incorrectType("MContextField", this._paramName);
}
void setDirectiveFieldsDeclaration(MDirectiveFieldsDeclaration mDirectiveFieldsDeclaration){
  throw ObjectMacroException.incorrectType("MDirectiveFieldsDeclaration", this._paramName);
}
void setInternalMacrosValueField(MInternalMacrosValueField mInternalMacrosValueField){
  throw ObjectMacroException.incorrectType("MInternalMacrosValueField", this._paramName);
}
void setInitInternalValue(MInitInternalValue mInitInternalValue){
  throw ObjectMacroException.incorrectType("MInitInternalValue", this._paramName);
}
void setGetterStringVtH(MGetterStringVtH mGetterStringVtH){
  throw ObjectMacroException.incorrectType("MGetterStringVtH", this._paramName);
}
void setGetterStringH(MGetterStringH mGetterStringH){
  throw ObjectMacroException.incorrectType("MGetterStringH", this._paramName);
}
void setGetterStringC(MGetterStringC mGetterStringC){
  throw ObjectMacroException.incorrectType("MGetterStringC", this._paramName);
}
void setGetterMacroVtH(MGetterMacroVtH mGetterMacroVtH){
  throw ObjectMacroException.incorrectType("MGetterMacroVtH", this._paramName);
}
void setGetterMacroH(MGetterMacroH mGetterMacroH){
  throw ObjectMacroException.incorrectType("MGetterMacroH", this._paramName);
}
void setGetterMacroC(MGetterMacroC mGetterMacroC){
  throw ObjectMacroException.incorrectType("MGetterMacroC", this._paramName);
}
void setAddStringVtH(MAddStringVtH mAddStringVtH){
  throw ObjectMacroException.incorrectType("MAddStringVtH", this._paramName);
}
void setAddStringH(MAddStringH mAddStringH){
  throw ObjectMacroException.incorrectType("MAddStringH", this._paramName);
}
void setAddStringC(MAddStringC mAddStringC){
  throw ObjectMacroException.incorrectType("MAddStringC", this._paramName);
}
void setAddMacroVtH(MAddMacroVtH mAddMacroVtH){
  throw ObjectMacroException.incorrectType("MAddMacroVtH", this._paramName);
}
void setAddMacroH(MAddMacroH mAddMacroH){
  throw ObjectMacroException.incorrectType("MAddMacroH", this._paramName);
}
void setAddMacroC(MAddMacroC mAddMacroC){
  throw ObjectMacroException.incorrectType("MAddMacroC", this._paramName);
}
void setFunctionRefs(MFunctionRefs mFunctionRefs){
  throw ObjectMacroException.incorrectType("MFunctionRefs", this._paramName);
}
void setStringPart(MStringPart mStringPart){
  throw ObjectMacroException.incorrectType("MStringPart", this._paramName);
}
void setEolPart(MEolPart mEolPart){
  throw ObjectMacroException.incorrectType("MEolPart", this._paramName);
}
void setParamInsertPart(MParamInsertPart mParamInsertPart){
  throw ObjectMacroException.incorrectType("MParamInsertPart", this._paramName);
}
void setIndentPart(MIndentPart mIndentPart){
  throw ObjectMacroException.incorrectType("MIndentPart", this._paramName);
}
void setInsertMacroPart(MInsertMacroPart mInsertMacroPart){
  throw ObjectMacroException.incorrectType("MInsertMacroPart", this._paramName);
}
void setInitStringBuilder(MInitStringBuilder mInitStringBuilder){
  throw ObjectMacroException.incorrectType("MInitStringBuilder", this._paramName);
}
void setSetInternal(MSetInternal mSetInternal){
  throw ObjectMacroException.incorrectType("MSetInternal", this._paramName);
}
void setStringBuilderBuild(MStringBuilderBuild mStringBuilderBuild){
  throw ObjectMacroException.incorrectType("MStringBuilderBuild", this._paramName);
}
void setParamRef(MParamRef mParamRef){
  throw ObjectMacroException.incorrectType("MParamRef", this._paramName);
}
void setParamMacroRefVtH(MParamMacroRefVtH mParamMacroRefVtH){
  throw ObjectMacroException.incorrectType("MParamMacroRefVtH", this._paramName);
}
void setParamMacroRefH(MParamMacroRefH mParamMacroRefH){
  throw ObjectMacroException.incorrectType("MParamMacroRefH", this._paramName);
}
void setParamMacroRefC(MParamMacroRefC mParamMacroRefC){
  throw ObjectMacroException.incorrectType("MParamMacroRefC", this._paramName);
}
void setInternalMacroRefH(MInternalMacroRefH mInternalMacroRefH){
  throw ObjectMacroException.incorrectType("MInternalMacroRefH", this._paramName);
}
void setInternalMacroRefVtH(MInternalMacroRefVtH mInternalMacroRefVtH){
  throw ObjectMacroException.incorrectType("MInternalMacroRefVtH", this._paramName);
}
void setInternalMacroRefC(MInternalMacroRefC mInternalMacroRefC){
  throw ObjectMacroException.incorrectType("MInternalMacroRefC", this._paramName);
}
void setAddIndent(MAddIndent mAddIndent){
  throw ObjectMacroException.incorrectType("MAddIndent", this._paramName);
}
void setClassNoneH(MClassNoneH mClassNoneH){
  throw ObjectMacroException.incorrectType("MClassNoneH", this._paramName);
}
void setClassNoneC(MClassNoneC mClassNoneC){
  throw ObjectMacroException.incorrectType("MClassNoneC", this._paramName);
}
void setClassBeforeFirstH(MClassBeforeFirstH mClassBeforeFirstH){
  throw ObjectMacroException.incorrectType("MClassBeforeFirstH", this._paramName);
}
void setClassBeforeFirstC(MClassBeforeFirstC mClassBeforeFirstC){
  throw ObjectMacroException.incorrectType("MClassBeforeFirstC", this._paramName);
}
void setClassAfterLastH(MClassAfterLastH mClassAfterLastH){
  throw ObjectMacroException.incorrectType("MClassAfterLastH", this._paramName);
}
void setClassAfterLastC(MClassAfterLastC mClassAfterLastC){
  throw ObjectMacroException.incorrectType("MClassAfterLastC", this._paramName);
}
void setClassSeparatorH(MClassSeparatorH mClassSeparatorH){
  throw ObjectMacroException.incorrectType("MClassSeparatorH", this._paramName);
}
void setClassSeparatorC(MClassSeparatorC mClassSeparatorC){
  throw ObjectMacroException.incorrectType("MClassSeparatorC", this._paramName);
}
void setStringValue(MStringValue mStringValue){
  throw ObjectMacroException.incorrectType("MStringValue", this._paramName);
}
void setMacroArg(MMacroArg mMacroArg){
  throw ObjectMacroException.incorrectType("MMacroArg", this._paramName);
}
void setStringArg(MStringArg mStringArg){
  throw ObjectMacroException.incorrectType("MStringArg", this._paramName);
}
void setParamMacroArgType(MParamMacroArgType mParamMacroArgType){
  throw ObjectMacroException.incorrectType("MParamMacroArgType", this._paramName);
}
void setParamArgType(MParamArgType mParamArgType){
  throw ObjectMacroException.incorrectType("MParamArgType", this._paramName);
}
void setParamArgName(MParamArgName mParamArgName){
  throw ObjectMacroException.incorrectType("MParamArgName", this._paramName);
}
void setParamMacroArgName(MParamMacroArgName mParamMacroArgName){
  throw ObjectMacroException.incorrectType("MParamMacroArgName", this._paramName);
}
void setParamMacroArgH(MParamMacroArgH mParamMacroArgH){
  throw ObjectMacroException.incorrectType("MParamMacroArgH", this._paramName);
}
void setParamMacroArgC(MParamMacroArgC mParamMacroArgC){
  throw ObjectMacroException.incorrectType("MParamMacroArgC", this._paramName);
}
void setParamStringArg(MParamStringArg mParamStringArg){
  throw ObjectMacroException.incorrectType("MParamStringArg", this._paramName);
}
void setContextName(MContextName mContextName){
  throw ObjectMacroException.incorrectType("MContextName", this._paramName);
}
void setContextParam(MContextParam mContextParam){
  throw ObjectMacroException.incorrectType("MContextParam", this._paramName);
}
void setContextArg(MContextArg mContextArg){
  throw ObjectMacroException.incorrectType("MContextArg", this._paramName);
}
void setGetInternalTail(MGetInternalTail mGetInternalTail){
  throw ObjectMacroException.incorrectType("MGetInternalTail", this._paramName);
}
void setStringParam(MStringParam mStringParam){
  throw ObjectMacroException.incorrectType("MStringParam", this._paramName);
}

}
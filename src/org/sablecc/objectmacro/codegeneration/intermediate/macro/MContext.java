/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.codegeneration.intermediate.macro;

import java.util.*;

public class MContext {

  private final String pName;
  private final MContext mContext = this;
  private final List<Object> eStringType_MacroType = new LinkedList<Object>();
  private final List<Object> eDirective = new LinkedList<Object>();

  public MContext(String pName) {
    if(pName == null) throw new NullPointerException();
    this.pName = pName;
  }

  public MStringType newStringType() {
    MStringType lStringType = new MStringType();
    this.eStringType_MacroType.add(lStringType);
    return lStringType;
  }

  public MMacroType newMacroType() {
    MMacroType lMacroType = new MMacroType();
    this.eStringType_MacroType.add(lMacroType);
    return lMacroType;
  }

  public MDirective newDirective(String pName) {
    MDirective lDirective = new MDirective(pName);
    this.eDirective.add(lDirective);
    return lDirective;
  }

  String pName() {
    return this.pName;
  }

  private String rName() {
    return this.mContext.pName();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append(" Context {");
    sb.append(System.getProperty("line.separator"));
    sb.append(" Name = '");
    sb.append(rName());
    sb.append("'");
    sb.append(System.getProperty("line.separator"));
    for(Object oStringType_MacroType : this.eStringType_MacroType) {
      sb.append(oStringType_MacroType.toString());
    }
    {
      boolean first = true;
      for(Object oDirective : this.eDirective) {
        if(first) {
          first = false;
        }
        else {
          sb.append(", ");
        }
        sb.append(oDirective.toString());
      }
    }
    sb.append(" }");
    sb.append(System.getProperty("line.separator"));
    return sb.toString();
  }

}

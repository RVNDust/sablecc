/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.codegeneration.java.macro;

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> Revert "Changement Objectmacro-back"
=======
>>>>>>> Revert "MaJ Fichier de Macro + Generation"
public class MInternalMacroField {

  private final String pName;
  private final MInternalMacroField mInternalMacroField = this;

  public MInternalMacroField(String pName) {
    if(pName == null) throw new NullPointerException();
    this.pName = pName;
  }

  String pName() {
    return this.pName;
  }

  private String rName() {
    return this.mInternalMacroField.pName();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    sb.append("    private Map<Context, InternalValue> list_");
=======
    sb.append("    private Map<Context, Macro[]> list_");
>>>>>>> Java code generation Objectmacro 2 using the lib ObjectMacro 1
=======
    sb.append("    private Map<Context, List<Macro>> list_");
>>>>>>> Removed in constructor initialization and add lazy initialization
=======
    sb.append("    private Map<Context, InternalValue> list_");
>>>>>>> Add structure which contains list of macros and the context associated
=======
    sb.append("    private Map<Context, InternalValue> list_");
>>>>>>> Revert "Changement Objectmacro-back"
=======
    sb.append("    private Map<Context, InternalValue> list_");
>>>>>>> Revert "MaJ Fichier de Macro + Generation"
    sb.append(rName());
    sb.append(" = new LinkedHashMap<>();");
    sb.append(System.getProperty("line.separator"));
    return sb.toString();
  }
<<<<<<< HEAD
<<<<<<< HEAD
=======
public class MInternalMacroField extends Macro{
>>>>>>> Changement Objectmacro-back
=======
>>>>>>> Revert "Changement Objectmacro-back"
=======
public class MInternalMacroField extends Macro{
>>>>>>> MaJ Fichier de Macro + Generation
=======
>>>>>>> Revert "MaJ Fichier de Macro + Generation"

}

/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.codegeneration.java.macro;

<<<<<<< HEAD
<<<<<<< HEAD
public class MInitStringBuilder {

  private final String pIndexBuilder;
  private final MInitStringBuilder mInitStringBuilder = this;

  public MInitStringBuilder(String pIndexBuilder) {
    if(pIndexBuilder == null) throw new NullPointerException();
    this.pIndexBuilder = pIndexBuilder;
  }

  String pIndexBuilder() {
    return this.pIndexBuilder;
  }

  private String rIndexBuilder() {
    return this.mInitStringBuilder.pIndexBuilder();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("        StringBuilder sb");
    sb.append(rIndexBuilder());
    sb.append(" = new StringBuilder();");
    sb.append(System.getProperty("line.separator"));
    return sb.toString();
  }

=======
=======
>>>>>>> object-macro2.1
import java.util.*;

public class MInitStringBuilder extends Macro{

    private String field_IndexBuilder;


    public MInitStringBuilder(String pIndexBuilder){

        this.setPIndexBuilder(pIndexBuilder);


    }

    private void setPIndexBuilder( String pIndexBuilder ){
        if(pIndexBuilder == null){
            throw ObjectMacroException.parameterNull("IndexBuilder");
        }

        this.field_IndexBuilder = pIndexBuilder;
    }

    private String buildIndexBuilder(){

        return this.field_IndexBuilder;
    }

    private String getIndexBuilder(){

        return this.field_IndexBuilder;
    }


    @Override
    void apply(
            InternalsInitializer internalsInitializer){

        internalsInitializer.setInitStringBuilder(this);
    }

   @Override
    public String build(){

        BuildState buildState = this.build_state;

        if(buildState == null){
            buildState = new BuildState();
        }
        else if(buildState.getExpansion() == null){
            throw ObjectMacroException.cyclicReference("InitStringBuilder");
        }
        else{
            return buildState.getExpansion();
        }
        this.build_state = buildState;

        

        

        StringBuilder sb0 = new StringBuilder();

        sb0.append("        StringBuilder sb");
        sb0.append(buildIndexBuilder());
        sb0.append(" = new StringBuilder();");

        buildState.setExpansion(sb0.toString());
        return sb0.toString();
    }

    @Override
    String build(Context context) {
        return build();
    }
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> Mise Ã  jour Visiteur - Build OK
}
=======
}
>>>>>>> Correctifs objectmacro2-java(back)
=======
}
>>>>>>> object-macro2.1

/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.codegeneration.java.macro;
import java.util.*;

public class InternalsInitializer {

    private final String _paramName;

    InternalsInitializer(String paramName){
        this._paramName = paramName;
    }

    void setHeader(MHeader mHeader){
        throw ObjectMacroException.incorrectType("MHeader", this._paramName);
    }

    void setPackageDeclaration(MPackageDeclaration mPackageDeclaration){
        throw ObjectMacroException.incorrectType("MPackageDeclaration", this._paramName);
    }

    void setImportJavaUtil(MImportJavaUtil mImportJavaUtil){
        throw ObjectMacroException.incorrectType("MImportJavaUtil", this._paramName);
    }

    void setContext(MContext mContext){
        throw ObjectMacroException.incorrectType("MContext", this._paramName);
    }

    void setInternalsInitializer(MInternalsInitializer mInternalsInitializer){
        throw ObjectMacroException.incorrectType("MInternalsInitializer", this._paramName);
    }

    void setParentInternalsSetter(MParentInternalsSetter mParentInternalsSetter){
        throw ObjectMacroException.incorrectType("MParentInternalsSetter", this._paramName);
    }

    void setSuperMacro(MSuperMacro mSuperMacro){
        throw ObjectMacroException.incorrectType("MSuperMacro", this._paramName);
    }

    void setMacro(MMacro mMacro){
        throw ObjectMacroException.incorrectType("MMacro", this._paramName);
    }

    void setMacroBuilder(MMacroBuilder mMacroBuilder){
        throw ObjectMacroException.incorrectType("MMacroBuilder", this._paramName);
    }

    void setEmptyBuilderWithContext(MEmptyBuilderWithContext mEmptyBuilderWithContext){
        throw ObjectMacroException.incorrectType("MEmptyBuilderWithContext", this._paramName);
    }

    void setPublic(MPublic mPublic){
        throw ObjectMacroException.incorrectType("MPublic", this._paramName);
    }

    void setContextExpansion(MContextExpansion mContextExpansion){
        throw ObjectMacroException.incorrectType("MContextExpansion", this._paramName);
    }

    void setNewContextExpansion(MNewContextExpansion mNewContextExpansion){
        throw ObjectMacroException.incorrectType("MNewContextExpansion", this._paramName);
    }

    void setRedefinedApplyInitializer(MRedefinedApplyInitializer mRedefinedApplyInitializer){
        throw ObjectMacroException.incorrectType("MRedefinedApplyInitializer", this._paramName);
    }

    void setParamMacroField(MParamMacroField mParamMacroField){
        throw ObjectMacroException.incorrectType("MParamMacroField", this._paramName);
    }

    void setParamStringField(MParamStringField mParamStringField){
        throw ObjectMacroException.incorrectType("MParamStringField", this._paramName);
    }

    void setInternalMacroField(MInternalMacroField mInternalMacroField){
        throw ObjectMacroException.incorrectType("MInternalMacroField", this._paramName);
    }

    void setInternalStringField(MInternalStringField mInternalStringField){
        throw ObjectMacroException.incorrectType("MInternalStringField", this._paramName);
    }

    void setContextField(MContextField mContextField){
        throw ObjectMacroException.incorrectType("MContextField", this._paramName);
    }

    void setConstructor(MConstructor mConstructor){
        throw ObjectMacroException.incorrectType("MConstructor", this._paramName);
    }

    void setStringParam(MStringParam mStringParam){
        throw ObjectMacroException.incorrectType("MStringParam", this._paramName);
    }

    void setMacroParam(MMacroParam mMacroParam){
        throw ObjectMacroException.incorrectType("MMacroParam", this._paramName);
    }

    void setParamStringSetter(MParamStringSetter mParamStringSetter){
        throw ObjectMacroException.incorrectType("MParamStringSetter", this._paramName);
    }

    void setParamMacroSetter(MParamMacroSetter mParamMacroSetter){
        throw ObjectMacroException.incorrectType("MParamMacroSetter", this._paramName);
    }

    void setInternalMacroSetter(MInternalMacroSetter mInternalMacroSetter){
        throw ObjectMacroException.incorrectType("MInternalMacroSetter", this._paramName);
    }

    void setApplyInternalsInitializer(MApplyInternalsInitializer mApplyInternalsInitializer){
        throw ObjectMacroException.incorrectType("MApplyInternalsInitializer", this._paramName);
    }

    void setRedefinedInternalsSetter(MRedefinedInternalsSetter mRedefinedInternalsSetter){
        throw ObjectMacroException.incorrectType("MRedefinedInternalsSetter", this._paramName);
    }

    void setStringValue(MStringValue mStringValue){
        throw ObjectMacroException.incorrectType("MStringValue", this._paramName);
    }

    void setMacroArg(MMacroArg mMacroArg){
        throw ObjectMacroException.incorrectType("MMacroArg", this._paramName);
    }

    void setStringArg(MStringArg mStringArg){
        throw ObjectMacroException.incorrectType("MStringArg", this._paramName);
    }

    void setSetParam(MSetParam mSetParam){
        throw ObjectMacroException.incorrectType("MSetParam", this._paramName);
    }

    void setParamArg(MParamArg mParamArg){
        throw ObjectMacroException.incorrectType("MParamArg", this._paramName);
    }

    void setStringPart(MStringPart mStringPart){
        throw ObjectMacroException.incorrectType("MStringPart", this._paramName);
    }

    void setEolPart(MEolPart mEolPart){
        throw ObjectMacroException.incorrectType("MEolPart", this._paramName);
    }

    void setParamInsertPart(MParamInsertPart mParamInsertPart){
        throw ObjectMacroException.incorrectType("MParamInsertPart", this._paramName);
    }

    void setInitStringBuilder(MInitStringBuilder mInitStringBuilder){
        throw ObjectMacroException.incorrectType("MInitStringBuilder", this._paramName);
    }

    void setInsertMacroPart(MInsertMacroPart mInsertMacroPart){
        throw ObjectMacroException.incorrectType("MInsertMacroPart", this._paramName);
    }

    void setSetInternal(MSetInternal mSetInternal){
        throw ObjectMacroException.incorrectType("MSetInternal", this._paramName);
    }

    void setStringBuilderBuild(MStringBuilderBuild mStringBuilderBuild){
        throw ObjectMacroException.incorrectType("MStringBuilderBuild", this._paramName);
    }

    void setParamMacroRefBuilder(MParamMacroRefBuilder mParamMacroRefBuilder){
        throw ObjectMacroException.incorrectType("MParamMacroRefBuilder", this._paramName);
    }

    void setParamStringRefBuilder(MParamStringRefBuilder mParamStringRefBuilder){
        throw ObjectMacroException.incorrectType("MParamStringRefBuilder", this._paramName);
    }

    void setParamMacroRef(MParamMacroRef mParamMacroRef){
        throw ObjectMacroException.incorrectType("MParamMacroRef", this._paramName);
    }

    void setParamStringRef(MParamStringRef mParamStringRef){
        throw ObjectMacroException.incorrectType("MParamStringRef", this._paramName);
    }

    void setParamRef(MParamRef mParamRef){
        throw ObjectMacroException.incorrectType("MParamRef", this._paramName);
    }

    void setContextName(MContextName mContextName){
        throw ObjectMacroException.incorrectType("MContextName", this._paramName);
    }

    void setNone(MNone mNone){
        throw ObjectMacroException.incorrectType("MNone", this._paramName);
    }

    void setBeforeFirst(MBeforeFirst mBeforeFirst){
        throw ObjectMacroException.incorrectType("MBeforeFirst", this._paramName);
    }

    void setAfterLast(MAfterLast mAfterLast){
        throw ObjectMacroException.incorrectType("MAfterLast", this._paramName);
    }

    void setSeparator(MSeparator mSeparator){
        throw ObjectMacroException.incorrectType("MSeparator", this._paramName);
    }

    void setGetInternalTail(MGetInternalTail mGetInternalTail){
        throw ObjectMacroException.incorrectType("MGetInternalTail", this._paramName);
    }

    void setContextVerifier(MContextVerifier mContextVerifier){
        throw ObjectMacroException.incorrectType("MContextVerifier", this._paramName);
    }

    void setContextParam(MContextParam mContextParam){
        throw ObjectMacroException.incorrectType("MContextParam", this._paramName);
    }

    void setContextArg(MContextArg mContextArg){
        throw ObjectMacroException.incorrectType("MContextArg", this._paramName);
    }

    void setInternalStringSetter(MInternalStringSetter mInternalStringSetter){
        throw ObjectMacroException.incorrectType("MInternalStringSetter", this._paramName);
    }

    void setInitMacroInternal(MInitMacroInternal mInitMacroInternal){
        throw ObjectMacroException.incorrectType("MInitMacroInternal", this._paramName);
    }

    void setInitStringInternal(MInitStringInternal mInitStringInternal){
        throw ObjectMacroException.incorrectType("MInitStringInternal", this._paramName);
    }

    void setExObjectMacroException(MExObjectMacroException mExObjectMacroException){
        throw ObjectMacroException.incorrectType("MExObjectMacroException", this._paramName);
    }

    void setExIncorrectType(MExIncorrectType mExIncorrectType){
        throw ObjectMacroException.incorrectType("MExIncorrectType", this._paramName);
    }

    void setExObjectMacroErrorHead(MExObjectMacroErrorHead mExObjectMacroErrorHead){
        throw ObjectMacroException.incorrectType("MExObjectMacroErrorHead", this._paramName);
    }

    void setExParameterNull(MExParameterNull mExParameterNull){
        throw ObjectMacroException.incorrectType("MExParameterNull", this._paramName);
    }

    void setExMacroNullInList(MExMacroNullInList mExMacroNullInList){
        throw ObjectMacroException.incorrectType("MExMacroNullInList", this._paramName);
    }

}


/* This file was generated by SableCC's ObjectMacro. */

package org.sablecc.objectmacro.codegeneration.java.macro;

import java.util.*;

public class MParamMacroSetter {

  private final String pName;
  private final MParamMacroSetter mParamMacroSetter = this;
  private final List<Object> eMacroParam = new LinkedList<Object>();
  private final List<Object> eParamArg = new LinkedList<Object>();
  private final List<Object> eApplyInternalsInitializer = new LinkedList<Object>();

  public MParamMacroSetter(String pName) {
    if(pName == null) throw new NullPointerException();
    this.pName = pName;
  }

  public MMacroParam newMacroParam(String pName) {
    MMacroParam lMacroParam = new MMacroParam(pName);
    this.eMacroParam.add(lMacroParam);
    return lMacroParam;
  }

  public MParamArg newParamArg(String pName) {
    MParamArg lParamArg = new MParamArg(pName);
    this.eParamArg.add(lParamArg);
    return lParamArg;
  }

  public MApplyInternalsInitializer newApplyInternalsInitializer(String pParamName) {
    MApplyInternalsInitializer lApplyInternalsInitializer = new MApplyInternalsInitializer(pParamName);
    this.eApplyInternalsInitializer.add(lApplyInternalsInitializer);
    return lApplyInternalsInitializer;
  }

  String pName() {
    return this.pName;
  }

  private String rName() {
    return this.mParamMacroSetter.pName();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("    private void setP");
    sb.append(rName());
    sb.append("(");
    for(Object oMacroParam : this.eMacroParam) {
      sb.append(oMacroParam.toString());
    }
    sb.append("){");
    sb.append(System.getProperty("line.separator"));
    sb.append("        if(");
    for(Object oParamArg : this.eParamArg) {
      sb.append(oParamArg.toString());
    }
    sb.append(" == null){");
    sb.append(System.getProperty("line.separator"));
    sb.append("            throw ObjectMacroException.parameterNull(\"");
    sb.append(rName());
    sb.append("\");");
    sb.append(System.getProperty("line.separator"));
    sb.append("        }");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("        Macro macros[] = ");
    for(Object oParamArg : this.eParamArg) {
      sb.append(oParamArg.toString());
    }
    sb.append(";");
    sb.append(System.getProperty("line.separator"));
    sb.append("        this.list_");
    sb.append(rName());
    sb.append(" = new Macro[macros.length];");
    sb.append(System.getProperty("line.separator"));
    sb.append("        int i = 0;");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("        for(Macro macro : macros){");
    sb.append(System.getProperty("line.separator"));
    sb.append("            if(macro == null){");
    sb.append(System.getProperty("line.separator"));
    sb.append("                throw ObjectMacroException.macroNull(i, \"");
    sb.append(rName());
    sb.append("\");");
    sb.append(System.getProperty("line.separator"));
    sb.append("            }");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("            ");
    for(Object oApplyInternalsInitializer : this.eApplyInternalsInitializer) {
      sb.append(oApplyInternalsInitializer.toString());
    }
    sb.append(System.getProperty("line.separator"));
    sb.append("            this.list_");
    sb.append(rName());
    sb.append("[i++] = macro;");
    sb.append(System.getProperty("line.separator"));
    sb.append(System.getProperty("line.separator"));
    sb.append("        }");
    sb.append(System.getProperty("line.separator"));
    sb.append("    }");
    sb.append(System.getProperty("line.separator"));
    return sb.toString();
  }

}
